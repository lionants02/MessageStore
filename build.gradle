plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

group 'hii.max.messagestore'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}
configurations {
    ktlint
}

dependencies {
    def jettyVersion = "9.4.14.v20181114"
    def jerseyVersion = "2.25.1"

    ktlint "com.pinterest:ktlint:0.33.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile 'org.jetbrains.exposed:exposed:0.13.7'
    compile "com.google.code.gson:gson:2.8.1"
    compile 'org.postgresql:postgresql:42.2.5'
    compile "org.eclipse.jetty:jetty-server:$jettyVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    compile "org.eclipse.jetty:jetty-http:$jettyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-servlet:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    compile "joda-time:joda-time:2.9.9"
    compile "args4j:args4j:2.33"
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.1'

    testImplementation "org.amshove.kluent:kluent:1.48"
    testImplementation "org.mockito:mockito-core:2.19.0"
    
    testCompile 'ru.yandex.qatools.embed:postgresql-embedded:2.10'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

jar {
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveName = "${project.name}.jar"
    destinationDir = file("$rootDir/build/bin")

    manifest { attributes 'Main-Class': 'ffc.airsync.api.FFCApiServerKt' }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE*'
    exclude 'META-INF/LICENSE*'
    exclude 'about.html'
}